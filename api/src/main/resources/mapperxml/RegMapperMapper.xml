<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.door.match.mapper.RegMapperMapper">
    <select id="selectcountExOpenid" resultType="java.lang.Long"  parameterType="ReqData" >
        select count(id) from reg_user where openid !=#{openid}  and sex != (select sex from reg_user  where openid = #{openid})
    </select>
    <select id="selectImgExOpenid" resultType="java.lang.String"  parameterType="ReqData" >
        select logo from reg_user
        where openid !=#{openid} and sex != (select sex from reg_user  where openid =#{openid})
        limit #{start},#{end}
    </select>
     <select id="selectRMInfoByOid" resultType="RegUserMapping"  parameterType="ReqData" >
        select id,
              reguserid,
              contact,
              selfidea,
              viewofmarriage,
              viewofconsume,
              viewoffuture,
              sex2,
              age_rank_id as agerankid,
              address2,
              income2,
              profession2, education2, married2,
              house2,
              car2,
              datastatus,
              heightmx,
              heightmi
        from reg_user_mapping
        where reguserid = (select id from reg_user  where openid = #{openid})
    </select>
    <select id="mapperagain" resultType="MappingRecord"  parameterType="RegUserMapping" >
        select #{reguserid} as reguserid, rr.id as mappingid,ROUND(count(rr.id)*100/8) as matchingdegree
        from (
            select ru1.id from reg_user ru1
            where ru1.sex != #{sex2}
            and ru1.address like CONCAT(#{address2}, '%')
            union ALL
            select ru2.id from reg_user ru2
            where ru2.sex != #{sex2}
            and ru2.income = #{income2}
            union ALL
            select ru3.id from reg_user ru3
            where ru3.sex != #{sex2}
            and ru3.birth >(
            select DATE_FORMAT(DATE_SUB(NOW(), interval (select ar.maxage from age_rank ar where ar.id =#{agerankid})
            year), "%Y-%m-%d") from dual)
            and ru3.birth <![CDATA[ < ]]>    (
            select DATE_FORMAT(DATE_SUB(NOW(), interval (select ar.minage from age_rank ar where ar.id =#{agerankid})
            year), "%Y-%m-%d") from dual)
            union ALL
            select ru4.id from reg_user ru4
            where ru4.sex != #{sex2}
            <if test="education2!= null and education2 !='不限'">
                and ru4.education=#{education2}
            </if>
            union ALL
            select ru5.id from reg_user ru5
            where ru5.sex != #{sex2}
            <if test="married2!=null and married2==0">
                and ru5.married=1
            </if>
            union ALL
            select ru6.id from reg_user ru6
            where ru6.sex !=#{sex2}
            <if test="house2 != null and house2 == 0">
                and
                ru6.house=1
            </if>
            union ALL
            select ru7.id from reg_user ru7
            where ru7.sex != #{sex2}
            <if test="car2 != null and car2 == 0">
                and ru7.car2=1
            </if>
            union ALL
            select ru8.id from reg_user ru8
            where ru8.sex !=#{sex2}
            and ru8.height >= #{heightmi}
            and ru8.height <![CDATA[ <= ]]>  #{heightmx}
        ) rr group by rr.id having count(rr.id) > 4
    </select>
    <insert id="insertMappRecord">
         insert into mapping_record(reguserid,mappingid,matchingdegree)
         values
            <foreach item="item" index="index" collection="list" separator=",">
                (
                #{item.reguserid},
                #{item.mappingid},
                #{item.matchingdegree}
                )
            </foreach>
    </insert>
    <select id="getmapperlist" parameterType="ReqData" resultType="MapperRecordInfo">
        select  mr.id,mr.reguserid,mr.mappingid,mr.matchingdegree,
                rum.`name`,rum.sex,rum.car,rum.house,rum.height,
                rumm.selfidea,rum.logo as img, TIMESTAMPDIFF(year,str_to_date(rum.birth, '%Y-%m-%d %H'),now()) as age
        from mapping_record mr
        left join reg_user rum on rum.id=mr.mappingid
        left join reg_user_mapping rumm on rumm.reguserid=rum.id
        where mr.reguserid=(select ru.id from reg_user ru where ru.openid=#{openid})
        and mr.id in (select max(mr1.id)from mapping_record mr1 GROUP BY mr1.reguserid,mr1.mappingid)
        order by mr.createtime desc
        limit #{start},#{end}
    </select>

</mapper>