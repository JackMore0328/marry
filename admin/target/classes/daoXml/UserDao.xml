<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.door.match.dao.UserDao">

    <sql id="baseUser">
		id,name, password,createTime, modifyTime,datastatus
	</sql>
    <sql id="baseRegUser">
		id,name,password,phone,birth,sex,address,height, weight,income,
        logo,img,profession,education,married,house,car,
       remark,createtime,modifytime,datastatus
	</sql>


    <select id="findUserByNameAndPassword" parameterType="com.door.match.entity.SysUser"
            resultType="com.door.match.entity.SysUser">
        select
        <include refid="baseUser"></include>
        from sys_user where 1=1 and name =#{name} and password =#{password}
    </select>

    <select id="findRegUserById" parameterType="java.lang.Long"
            resultType="com.door.match.entity.UserMappingDto">
      select
	a.id, a.name, a.birth, a.sex, a.address,
	a.height, d.salary income, a.logo, a.education,
	a.married, a.house, a.car, b.contact, b.selfidea, b.viewofmarriage,
	b.viewofconsume, b.sex2, c.agerank age2, b.address2,
	b.heightmi, e.salary income2,  b.education2, b.married2,
	b.house2, b.car2, b.heightmx, concat(b.heightmi,' - ',b.heightmx) height2
from
	reg_user a
left join reg_user_mapping b on a.id = b.reguserid
left join age_rank c on b.age_rank_id=c.id
left join salary_rank d on a.income=d.id
left join salary_rank e on b.income2=e.id
        where a.id=#{id}
    </select>


    <select id="countRegUsers" resultType="java.lang.Long" parameterType="com.door.match.entity.RegUser">
        select IFNULL(count(name),0) counts
        from reg_user
        where 1=1
        <if test="name!=null and name !=''">
            and name like concat('%',#{name},'%')
        </if>
        <if test="startDateStr!=null">
            and createTime between STR_TO_DATE(#{startDateStr},'%Y-%m-%d') and STR_TO_DATE(#{endDateStr},'%Y-%m-%d')
        </if>

    </select>


    <select id="listRegUser" parameterType="com.door.match.entity.RegUser"
            resultType="com.door.match.entity.RegUser">
        select
        <include refid="baseRegUser"></include>
        from reg_user
        where 1=1
        <if test="name!=null and name !=''">
            and name like concat('%',#{name},'%')
        </if>
        <if test="startDateStr!=null">
            and createTime between STR_TO_DATE(#{startDateStr},'%Y-%m-%d') and STR_TO_DATE(#{endDateStr},'%Y-%m-%d')
        </if>
        limit #{startNo},#{pageSize}
    </select>

</mapper>